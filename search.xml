<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>阿方</title>
      <link href="2020/10/01/%E5%8D%9A%E5%AE%A2%E5%90%8D%E5%AD%97/"/>
      <url>2020/10/01/%E5%8D%9A%E5%AE%A2%E5%90%8D%E5%AD%97/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Vuex</title>
      <link href="2017/05/26/vuex/"/>
      <url>2017/05/26/vuex/</url>
      
        <content type="html"><![CDATA[<h1 id="vuex"><a href="#vuex" class="headerlink" title="vuex"></a>vuex</h1><p>官网：<a href="https://vuex.vuejs.org/zh/">https://vuex.vuejs.org/zh/</a></p><h3 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1.介绍"></a>1.介绍</h3><p>Vuex 是一个专为 Vue.js 应用程序开发的<strong>状态管理模式</strong>。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。</p><h3 id="2-使用"><a href="#2-使用" class="headerlink" title="2.使用"></a>2.使用</h3><p>1.安装</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre class=" language-hljs ada">npm i vuex <span class="hljs-comment"><code class="language-hljs ada">npm i vuex <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><p>2.src/store/index.js 创建仓库</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre class=" language-hljs js"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> Vuex <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vuex&quot;</span><br>Vue.use(Vuex)<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">new</span> Vuex.Store(&#123;<br>    <span class="hljs-comment">//状态 数据</span><br>    state: &#123;<br>        name: <span class="hljs-string">&quot;妲己&quot;</span>,<br>        age: <span class="hljs-number">20</span><br>    &#125;,<br>    <span class="hljs-comment">//修改state</span><br>    mutations: &#123;<br>        changeWang(state) &#123;<br>            state.name = <span class="hljs-string">&quot;王昭君&quot;</span><br>        &#125;,<br>        change50(state) &#123;<br>            state.age = <span class="hljs-number">50</span><br>        &#125;<br>    &#125;,<br>     <span class="hljs-comment">// 接收组件的触发的动作，可以处理异步，但是不能修改state，最后会commit到mutations</span><br>    actions:&#123;<br>        <span class="hljs-comment">//context 就是你的仓库本身，是个只读的</span><br>        changeWang(context)&#123;<br>            context.commit(<span class="hljs-string">&#x27;changeWang&#x27;</span>)<br>        &#125;,<br>        changeName(context,name)&#123;<br>            context.commit(<span class="hljs-string"><code class="language-hljs js"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> Vuex <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vuex&quot;</span><br>Vue.use(Vuex)<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">new</span> Vuex.Store(&#123;<br>    <span class="hljs-comment">//状态 数据</span><br>    state: &#123;<br>        name: <span class="hljs-string">&quot;妲己&quot;</span>,<br>        age: <span class="hljs-number">20</span><br>    &#125;,<br>    <span class="hljs-comment">//修改state</span><br>    mutations: &#123;<br>        changeWang(state) &#123;<br>            state.name = <span class="hljs-string">&quot;王昭君&quot;</span><br>        &#125;,<br>        change50(state) &#123;<br>            state.age = <span class="hljs-number">50</span><br>        &#125;<br>    &#125;,<br>     <span class="hljs-comment">// 接收组件的触发的动作，可以处理异步，但是不能修改state，最后会commit到mutations</span><br>    actions:&#123;<br>        <span class="hljs-comment">//context 就是你的仓库本身，是个只读的</span><br>        changeWang(context)&#123;<br>            context.commit(<span class="hljs-string">&#x27;changeWang&#x27;</span>)<br>        &#125;,<br>        changeName(context,name)&#123;<br>            context.commit(<span class="hljs-string">"changeName"</span>,name)<br>        &#125;<br>    &#125;<br>&#125;)<br></code></pre></td></tr></table></figure><p>3.main.js引入，挂到vue根实例上</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre class=" language-hljs js"><span class="hljs-keyword">import</span> store <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./store&quot;</span><br><span class="hljs-keyword">new</span> Vue(&#123;<br>  el: <span class="hljs-string">&#x27;#app&#x27;</span>,<br>  router,<br>  components: &#123; App &#125;,<br>  template: <span class="hljs-string">&#x27;&lt;App/&gt;&#x27;</span>,<br>  <span class="hljs-comment"><code class="language-hljs js"><span class="hljs-keyword">import</span> store <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./store&quot;</span><br><span class="hljs-keyword">new</span> Vue(&#123;<br>  el: <span class="hljs-string">&#x27;#app&#x27;</span>,<br>  router,<br>  components: &#123; App &#125;,<br>  template: <span class="hljs-string">&#x27;&lt;App/&gt;&#x27;</span>,<br>  <span class="hljs-comment">//仓库</span><br>  store<br>&#125;)<br><br></code></pre></td></tr></table></figure><p>4.组件取数据，调方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre class=" language-hljs vue"><code class="language-hljs vue"><p>name:&#123;&#123;$store.state.name&#125;&#125;<&#x2F;p><br><p>age:&#123;&#123;$store.state.age&#125;&#125;<&#x2F;p><br><button @click&#x3D;"$store.commit('changeWang')">王昭君<&#x2F;button><br><button @click&#x3D;"$store.dispatch('changeWang')">action 王昭君<&#x2F;button><br><button @click&#x3D;"$store.dispatch('changeName','杨玉环')">action 杨玉环<&#x2F;button><br></code></pre></td></tr></table></figure><h3 id="小结："><a href="#小结：" class="headerlink" title="小结："></a>小结：</h3><p>1.mutations VS actions</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre class=" language-hljs pf"><span class="hljs-number">1</span>.mutations 只能处理同步，action可以处理异步<br><span class="hljs-number">2</span>.触发mutations通过commit,触发actions通过dispatch<br><span class="hljs-number">3</span>.mutations用来修改<span class="hljs-keyword"><code class="language-hljs pf"><span class="hljs-number">1</span>.mutations 只能处理同步，action可以处理异步<br><span class="hljs-number">2</span>.触发mutations通过commit,触发actions通过dispatch<br><span class="hljs-number">3</span>.mutations用来修改<span class="hljs-keyword">state</span>,actions用来接收组件派发的动作<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> web前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery </tag>
            
            <tag> 表格 </tag>
            
            <tag> 表单验证 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
